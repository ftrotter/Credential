<?php
/* 
	This controller extends the base controller (alway our creation..)
	the base controller lets us use smarty as a templating language...
	This controller allows us to automatically handle the creations of 
	autogenerated controllers based on the contents of a Mysql database..


	Note: not currently in use...

*/

class CompileController extends BaseController {

	function dashboard($npi){

  $re1='.*?';	# Non-greedy match on filler
  $re2='(json)';	# Word 1
  $re3='.*?';	# Non-greedy match on filler
  $re4='(sql)';	# Variable Name 1

		try{
			$Provider = Provider::findOrFail($npi);
		} catch (Exception $e) {
			echo "Can't find $npi";
			exit();	
		}


		$this->view_data['npi'] = $npi;

		$sql_dir = Config::get('app.sql_dir');
		$dir = opendir($sql_dir);
		$reports = array();	
		while(($file = readdir($dir)) !== false){	

  			if ($c=preg_match_all ("/".$re1.$re2.$re3.$re4."/is", $file, $matches)){
				$file_array = explode(".",$file);
				$reports[] = $file_array[0];
			}
		}

		$this->view_data['reports'] = $reports;	
		return($this->_render('compile_dashboard'));
	}
	
	
	function practiceform($npi,$sql_file){

		$this->view_data['npi'] = $npi;

		try{
			$Provider = Provider::findOrFail($npi);
		} catch (Exception $e) {
			echo "Can't find $npi";
			exit();	
		}
	

		$sql_dir = Config::get('app.sql_dir');
		$this->view_data['sql_file'] = $sql_file;
		$sql_full_file = $sql_dir . $sql_file . ".sql";;
	

		$sql = file_get_contents($sql_full_file);
		//$sql .= " WHERE Providers.id = $npi";
		//this is what we are doing... but we expect Providers.id = to be provided in the sql file..
		$sql .= " $npi";


		$results = DB::select($sql);
		
		$result_array = array();
		$i = 0;
		foreach($results as $a_result){
			$tmp = array( 'npi' => $npi);
			foreach($a_result as $key => $value){

				$new_key = preg_replace("/(Practices_)/", "practice_$i"."_",$key);
				if(strlen($value) > 0){
					$tmp[$new_key] = $value;
				}
			}
			$result_array[] = $tmp;
			$i++;
		}

		$this->view_data['results'] = $result_array;

		return($this->_render('compile_form'));

	}


}
